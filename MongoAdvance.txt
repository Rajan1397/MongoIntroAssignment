create a mock movies table in mongodb which has 500 documents which has following columns/fields ( use mockaroo.com for dummy data ) :-

    id
 movie_name 
 movie_genre
 production_year ( between 1990 to 2020)
 budget ( 9000 to 20000)
 I want queries for the following in mongo all queries should only return movie_name and production_year


-----------------------------------------------------------------------------------

To create the database used Mongodb Compass.

 I want queries for the following in mongo all queries should only return movie_name and production_year

 1) find all movies which are equal to movie_name?

 Ans:  db.movieDetails.find({"movie_name": 1, "production_year": 1, "_id": 0}).pretty() 

 2) find all movies which are not equal to movie_name?

 Ans:  db.movieDetails.find({"movie_name": 0, "production_year": 1, "_id": 0}).pretty() 
 
 3) find all movies greater than and greater than equal to a budget?

 Ans: It asks for two parameters like as shown first what mathematical operations are needed to done, and what are the stuff needed for the output.

  db.movieDetails.find({"budget": {$gte: 20000}, {"movie_name": 1, "production_year": 1,    "_id": 0}).pretty()

4) find all movies less than and less than equal to a budget?

Ans: db.movieDetails.find({"budget": {$lte: 20000}, {"movie_name": 1, "production_year": 1,    "_id": 0}).pretty()

5) find all movies that are produced after 2000 with budget greater than 10000?

Ans: db.movieDetails.find({"budget": {$lte: 10000}, "production_year": {$gt: 2000} }, {"movie_name": 1, "production_year": 1, "_id": 0}).pretty() 


6) find all movies that are produced after 2000 or budget greater than 10000?

Ans: db.movieDetails.find({$or: [{ "budget": {$lte: 10000}},{ "production_year": {$gt: 2000}}]}, {"movie_name": 1, "production_year": 1, "_id": 0}).pretty()

7) find all movies that are neither produced after 2000 nor with budget greater than 10000.?

Ans: db.movieDetails.find({$nor: [{ "budget": {$lte: 10000}},{ "production_year": {$gt: 2000}}]}, {"movie_name": 1, "production_year": 1, "_id": 0}).pretty()

8) find all movies that are not produced in 2000 or they do not have budget of 10000?

Ans: db.movieDetails.find({$or: [{ "budget": {$ne: 10000}},{ "production_year": {$ne: 2000}}]}, {"movie_name": 1, "production_year": 1, "_id": 0}).pretty() 

9) find all movies that were produced from 2000 to 2010.?

Ans: db.movieDetails.find({ "production_year": {$gte: 2000, $lte: 2010}}, {"movie_name": 1, "production_year": 1, "_id": 0}).pretty()

10) Sort all movies descending based on the production year and if the year is same then alphabetically for their movie_names?

Ans: db.movieDetails.find({}, {"movie_name": 1, "production_year": 1, "_id": 0}).sort({"production_year": -1}).pretty()


11) in query 10 skip the first 10 entries and fetch the next 5?

Ans: db.movieDetails.find({}, {"movie_name": 1, "production_year": 1, "_id": 0}).skip(10).limit(5).pretty()  

